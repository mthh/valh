% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vl_locate.R
\name{vl_locate}
\alias{vl_locate}
\title{Get the Nearest Point on the Road Network}
\usage{
vl_locate(
  loc,
  verbose = F,
  costing = "auto",
  costing_options = list(),
  val.server = "https://valhalla1.openstreetmap.de/"
)
}
\arguments{
\item{loc}{one (or multiples) point(s) to snap to the street network.
\code{loc} can be: \itemize{
  \item a vector of coordinates (longitude and latitude, WGS 84),
  \item a data.frame of longitudes and latitudes (WGS 84),
  \item a matrix of longitudes and latitudes (WGS 84),
  \item an sfc object of type POINT,
  \item an sf object of type POINT.
}}

\item{verbose}{a logical indicating whether to return additional information}

\item{costing}{the costing model to use for the route. Default is
"auto".\cr}

\item{costing_options}{a list of options to use with the costing model
(see https://valhalla.github.io/valhalla/api/turn-by-turn/api-reference/#costing-options
for more details about the options available for each costing model).
Default is an empty list.\cr}

\item{val.server}{the URL of the Valhalla server. Default is the demo server
(https://valhalla1.openstreetmap.de/).}
}
\value{
If there is only one input point, return a single sf object
containing the nearest point(s) on the road network.
If there is more than one input point, return a list of sf objects,
one for each input point.
}
\description{
This function interfaces with the \emph{nearest} Valhalla
service.\cr
}
