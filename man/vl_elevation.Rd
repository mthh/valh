% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vl_elevation.R
\name{vl_elevation}
\alias{vl_elevation}
\title{Get Elevation Along a Route}
\usage{
vl_elevation(
  loc,
  sampling_dist = NA,
  val.server = "https://valhalla1.openstreetmap.de/"
)
}
\arguments{
\item{loc}{one (or multiples) point(s) to snap to the street network.
\code{loc} can be: \itemize{
  \item a vector of coordinates (longitude and latitude, WGS 84),
  \item a data.frame of longitudes and latitudes (WGS 84),
  \item a matrix of longitudes and latitudes (WGS 84),
  \item an sfc object of type POINT,
  \item an sf object of type POINT.
}}

\item{sampling_dist}{the distance between each point to sample the elevation
(in meters). Default is 'NA' (no sampling).}

\item{val.server}{the URL of the Valhalla server. Default is the demo server
(https://valhalla1.openstreetmap.de/).}
}
\value{
An sf POINT object is returned with the following fields: 'distance'
(the distance from the first points), 'height' (the sampled height on the DEM)
and 'geometry' (the geometry of the sampled point).
}
\description{
Build and send a Valhalla API query to get the elevation at a
set of input locations.
This function interfaces with the \emph{height} service.\cr
If \code{sampling_dist} is provided, the elevation is sampled at regular
intervals along the input locations.
}
\examples{
\dontrun{
# Inputs are data frames
apotheke.df <- read.csv(system.file("csv/apotheke.csv", package = "valh"))
# The first 5 points
pts <- apotheke.df[1:5, c("lon", "lat")]
# Ask for the elevation at these points
vl_elevation(loc = pts)

# Inputs are sf points
library(sf)
apotheke.sf <- st_read(system.file("gpkg/apotheke.gpkg", package = "valh"),
                       quiet = TRUE)
# The first 5 points
pts <- apotheke.sf[1:5, ]
# Ask for the elevation at these points
vl_elevation(loc = pts)
# Ask for elevation between the first and the second points,
# sampling every 100 meters
vl_elevation(loc = apotheke.sf[1:2, ], sampling_dist = 100)
}
}
